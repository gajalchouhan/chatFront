{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/chat/chat-box/chat-box.component.css","webpack:///./src/app/chat/chat-box/chat-box.component.html","webpack:///./src/app/chat/chat-box/chat-box.component.ts","webpack:///./src/app/chat/chat-route-guard.service.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/app/chat/group-chat/group-chat.component.css","webpack:///./src/app/chat/group-chat/group-chat.component.html","webpack:///./src/app/chat/group-chat/group-chat.component.ts","webpack:///./src/app/shared/first-char/first-char.component.css","webpack:///./src/app/shared/first-char/first-char.component.html","webpack:///./src/app/shared/first-char/first-char.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/user-details/user-details.component.css","webpack:///./src/app/shared/user-details/user-details.component.html","webpack:///./src/app/shared/user-details/user-details.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/verify/verify.component.css","webpack:///./src/app/user/verify/verify.component.html","webpack:///./src/app/user/verify/verify.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n// Import ParticlesModule\nimport { ParticlesModule } from 'angular-particle';\n\n// routing\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserModule } from './user/user.module';\nimport { ChatModule } from './chat/chat.module';\nimport { LoginComponent } from './user/login/login.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ChatModule,\n    UserModule,\n    HttpClientModule,\n    ParticlesModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class AppService {\n\n  private url =  'http://chatapi.gajalportfolio.xyz/api/v1';\n\n  constructor(\n    public http: HttpClient\n  ) {\n\n  } // end constructor\n\n\n  public getUserInfoFromLocalstorage = () => {\n\n    return JSON.parse(localStorage.getItem('userInfo'));\n\n  } // end getUserInfoFromLocalstorage\n\n\n  public setUserInfoInLocalStorage = (data) => {\n\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    console.log(data);\n  }\n\n  public signupFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobileNumber', data.mobile)\n      .set('email', data.email)\n      .set('password', data.password );\n\n    return this.http.post(`${this.url}/users/signup`, params);\n\n  } // end of signupFunction function.\n\n  public logInFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n\n    return this.http.post(`${this.url}/users/login`, params);\n  } // end of signinFunction function.\n\n\n  public logout(): Observable<any> {\n\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authtoken'));\n\n    return this.http.post(`${this.url}/users/logout`, params);\n\n  } // end logout function\n\n  public verifyEmail = (data): Observable<any> => {\n    const param = new HttpParams()\n      .set('hash', data);\n\n    return this.http.put(`${this.url}/users/verifyEmail`, param);\n  }\n\n  public forgotPassword = (email): Observable<any> => {\n    const param = new HttpParams()\n      .set('email', email);\n\n    return this.http.post(`${this.url}/users/forgotPassword`, param);\n  }\n\n  public resetPassword = (data): Observable<any> => {\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n    return this.http.put(`${this.url}/users/resetPassword`, params);\n\n\n  }\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }  // END handleError\n\n  public createGroup = (data, authToken): Observable<any> => {\n    const params = new HttpParams()\n    .set('name', data.name)\n    .set('creator', data.creator);\n\n  return this.http.post(`${this.url}/group/createGroup?authToken=${authToken}`, params);\n  }\n\n  public editGroup = (data, authToken): Observable<any> => {\n    const params = new HttpParams()\n    .set('name', data.name);\n  return this.http.put(`${this.url}/group/${data.roomId}/editGroup?authToken=${authToken}`, params);\n  }\n\n\n  public deleteGroup = (roomId, authToken): Observable<any> => {\n    const data = {};\n    return this.http.post(`${this.url}/group/${roomId}/deleteGroup?authToken=${authToken}`, data);\n  }\n\n  public close = (roomId, authToken): Observable<any> => {\n    const data = {};\n    return this.http.put(`${this.url}/group/${roomId}/markAsClose?authToken=${authToken}`, data);\n  }\n\n  public getChatGroup = (authToken): Observable<any> => {\n    return this.http.get(`${this.url}/group/getChatGroup?authToken=${authToken}`);\n  }\n\n  public getChatsForGroup(receiverId, skip): Observable<any> {\n\n    return this.http.get(`${this.url}/group/chat/get/for/group?receiverId=${receiverId}&skip=${skip}&authToken=${Cookie.get('authtoken')}`)\n      .do(data => console.log('Data Received'))\n      .catch(this.handleError);\n  }\n\n  public shareLink = (data, authToken): Observable<any> => {\n    const params = new HttpParams()\n    .set('email', data.email)\n    .set('roomId', data.roomId)\n    .set('roomName', data.roomName);\n    return this.http.post(`${this.url}/group/shareLink?authToken=${authToken}`, params);\n  }\n}\n","module.exports = \".online{\\n\\n  height: 10px;\\n  width: 10px;\\n  background-color:green;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\\n.offline{\\n\\n  height: 10px;\\n  width: 10px;\\n  background-color:red;\\n  border-radius: 50%;\\n  display: inline-block;\\n}\\n\\n#btnPlace{\\n  margin-top:26vmin;\\n}\\n\\n.rightSideClass {\\n    float: right;\\n    background: #ddd;\\n    border-radius: 0.5em;\\n  }\\n\\n.leftSideClass {\\n    float: left;\\n    background: #55C1E7;\\n    border-radius: 0.5em;\\n  }\\n\\n.circle-green:before {\\n    content: ' \\\\25CF';\\n    font-size: 1em;\\n    color: green;\\n  }\\n\\n.circle-red:before {\\n    content: ' \\\\25CF';\\n    font-size: 1em;\\n    color: red;\\n  }\\n\\n.cursorPointer {\\n    cursor: pointer;\\n  }\\n\\n.textCenter {\\n    text-align: center;\\n  }\\n\\n.floatLeft {\\n    float: left;\\n  }\\n\\n*,\\n  *:before,\\n  *:after {\\n    box-sizing: border-box;\\n  }\\n\\nbody {\\n    padding: 2.5em 0;\\n    color: white;\\n  }\\n\\n.container {\\n    margin: 0 auto;\\n    background: #444753;\\n    border-radius: 0.3em;\\n  }\\n\\n.people-list {\\n    float: left;\\n  }\\n\\n.people-list input {\\n    border-radius: 0.2em;\\n    border: none;\\n    padding: 1em;\\n    color: white;\\n    background: #6A6C75;\\n    width: 90%;\\n    font-size: 1em;\\n  }\\n\\n.people-list .fa-search {\\n    position: relative;\\n    left: -1.8em;\\n  }\\n\\n.people-list ul {\\n    padding: 0;\\n  }\\n\\n.people-list ul li .userPresence {\\n    float: left;\\n    padding: 0.7em 0.2em;\\n    color: white;\\n    text-transform: capitalize;\\n    width:100%;\\n  }\\n\\n.textCapitalize {\\n    text-transform: capitalize;\\n    font-size: 1.2em;\\n  }\\n\\n.people-list img {\\n    float: left;\\n  }\\n\\n.people-list .about {\\n    float: left;\\n  }\\n\\n.people-list .about {\\n    padding-left: 0.4em;\\n  }\\n\\n.people-list .status {\\n    color: #92959E;\\n  }\\n\\n.chat {\\n    height: 100vh;\\n    float: left;\\n    background: #F2F5F8;\\n    border-top-right-radius: 0.3em;\\n    border-bottom-right-radius: 0.3em;\\n    color: #434651;\\n  }\\n\\n.chat .chat-header {\\n    padding: 0.2em;\\n    border-bottom: 0.15em solid white;\\n  }\\n\\n.chat .chat-header img {\\n    float: left;\\n  }\\n\\n.chat .chat-header .chat-about {\\n    float: left;\\n    padding-left: 0.8em;\\n    margin-top: 0.4em;\\n  }\\n\\n.chat .chat-header .chat-with {\\n    font-weight: bold;\\n    font-size: 1.1em;\\n  }\\n\\n.chat .chat-header .chat-num-messages {\\n    color: #92959E;\\n  }\\n\\n.chat .chat-header .fa-star {\\n    float: right;\\n    color: #D8DADF;\\n    font-size: 1.42em;\\n    margin-top: 0.85em;\\n  }\\n\\n.chat .chat-history {\\n    padding: 2em 2em 1.42em;\\n    border-bottom: 0.15em solid white;\\n    overflow-y: scroll;\\n    height: 80vh;\\n  }\\n\\n.chat .chat-history .message-data {\\n    margin-bottom: 1em;\\n  }\\n\\n.chat .chat-history .message-data-time {\\n    color: #a8aab1;\\n    padding-left: 0.4em;\\n  }\\n\\n.chat .chat-history .message {\\n    color: white;\\n    padding: 0.5em 1.42em;\\n    line-height: 1.9em;\\n    font-size: 1.1em;\\n    border-radius: 7px;\\n    margin-bottom: 2em;\\n    width: 90%;\\n    position: relative;\\n  }\\n\\n.chat .chat-history .message:after {\\n    bottom: 100%;\\n    left: 7%;\\n    border: solid transparent;\\n    content: \\\" \\\";\\n    height: 0;\\n    width: 0;\\n    position: absolute;\\n    pointer-events: none;\\n    border-bottom-color: #86BB71;\\n    border-width: 0.8em;\\n    margin-left: -0.8em;\\n  }\\n\\n.chat .chat-history .my-message {\\n    background: #86BB71;\\n  }\\n\\n.chat .chat-history .other-message {\\n    background: #94C2ED;\\n  }\\n\\n.chat .chat-history .other-message:after {\\n    border-bottom-color: #94C2ED;\\n    left: 90%;\\n  }\\n\\n.chat .chat-message textarea {\\n    width: 100%;\\n    border: none;\\n    padding: 0.8em 1.42em;\\n    margin-bottom: 0.8em;\\n    border-radius: 5px;\\n    resize: none;\\n  }\\n\\n.chat .chat-message .fa-file-o,\\n  .chat .chat-message .fa-file-image-o {\\n    font-size: 1.1em;\\n    color: gray;\\n    cursor: pointer;\\n  }\\n\\n.chat .chat-message button {\\n    float: right;\\n    color: #94C2ED;\\n    font-size: 1.1em;\\n    text-transform: uppercase;\\n    border: none;\\n    cursor: pointer;\\n    font-weight: bold;\\n    background: #F2F5F8;\\n  }\\n\\n.chat .chat-message button:hover {\\n    color: #75b1e8;\\n  }\\n\\n.online,\\n  .offline,\\n  .me,\\n  .warning {\\n    margin-right: 3px;\\n    font-size: 0.8em;\\n  }\\n\\n.online {\\n    color: #86BB71;\\n  }\\n\\n.offline {\\n    color: #E38968;\\n  }\\n\\n.me {\\n    color: #94C2ED;\\n  }\\n\\n.warning {\\n    color: #e78930;\\n  }\\n\\n.align-left {\\n    text-align: left;\\n  }\\n\\n.align-right {\\n    text-align: right;\\n  }\\n\\n.float-right {\\n    float: right;\\n  }\\n\\n.clearfix:after {\\n    visibility: hidden;\\n    display: block;\\n    font-size: 0;\\n    content: \\\" \\\";\\n    clear: both;\\n    height: 0;\\n  }\\n\\n.customButton {\\n    width: 100%;\\n  }\\n\\n.activeChat {\\n    background: #393a41;\\n  }\\n\\n.typeOfChats {\\n    background: #393a41;\\n    color: white;\\n    margin-top: 0.2em;\\n    margin-bottom: 0.2em;\\n  }\\n\\n.blankContent{\\n    height: 100vh;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 3rem;\\n    color: #999;\\n  }\\n\\n@media only screen and (max-width:575px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n\\n@media only screen and (min-width:576px) and (max-width:768px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n\\n@media only screen and (min-width:769px) and (max-width:992px) {\\n    .chat .chat-history {\\n      height:65vh;\\n    }\\n  }\\n\\n@media only screen and (min-width:993px) and (max-width:1200  px) {\\n    .chat .chat-history {\\n      height:50vh;\\n    }\\n  }\\n\\n/* user list items */\\n\\n.crop {\\n  border-radius: 100%;\\n  line-height: 1em;\\n  padding: 1em;\\n  text-align: center;\\n  margin: 0em;\\n  width: 3em;\\n  height: 3em;\\n  float: left;\\n  text-transform: uppercase;\\n}\\n\\n.about {\\n  float: left;\\n  padding-left: 0.4em;\\n}\\n\\n.online,\\n.offline,\\n.me,\\n.warning {\\n  margin-right: 3px;\\n  font-size: 0.8em;\\n}\\n\\n.online {\\n  color: #86BB71;\\n}\\n\\n.offline {\\n  color: #E38968;\\n}\\n\\n.me {\\n  color: #94C2ED;\\n}\\n\\n.warning {\\n  color: #00c8e7;\\n}\\n\\n.status {\\n  color: #92959E;\\n}\\n\\n.name {\\n  float: left;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"displayBlockMobile\\\" style=\\\"position:fixed;width:100%;z-index:1;\\\">\\n      <div class=\\\"col-sm-12 p-0\\\">\\n        <nav class=\\\"navbar navbar-expand-md navbar-fixed navbar-dark bg-dark\\\">\\n          <a class=\\\"navbar-brand text-white\\\">\\n            {{userInfo.firstName}} {{userInfo.lastName}}\\n            <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n            <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n          </a>\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n          </button>\\n          <div class=\\\"collapse people-list navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"list\\\">\\n              <li class=\\\"p-2 typeOfChats\\\">\\n                Chat Rooms:\\n              </li>\\n              <div *ngIf=\\\"chatRooms!==null;else noRoom\\\">\\n                <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let room of chatRooms\\\" [ngClass]=\\\"{'activeChat': room.chatting == true}\\\" (click)=\\\"roomSelectedToChat(room.roomId,room.roomName)\\\">\\n                  <div class=\\\"userPresence\\\">\\n                    <app-user-details [userFirstName]=\\\"room.roomName\\\" [userLastName]=\\\"''\\\" [roomId]=\\\"room.roomId\\\" [userStatus]=\\\"'Admin - '+room.creator\\\"\\n                      [messageRead]=\\\"\\\" [list]=\\\"'chatRoom'\\\"></app-user-details>\\n                  </div>\\n                </li>\\n              </div>\\n              <ng-template #noRoom>\\n                <p class=\\\"text-center text-light\\\">No Chat Room</p>\\n              </ng-template>\\n            </ul>\\n\\n            <ul class=\\\"list\\\">\\n              <li class=\\\"p-2 typeOfChats\\\">\\n                Online Users:\\n              </li>\\n              <div *ngIf=\\\"userList.length>1;else noUser\\\">\\n                <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let user of userList\\\">\\n                  <div class=\\\"userPresence\\\" *ngIf=\\\"user.userId != userInfo.userId\\\" style=\\\"cursor:text\\\">\\n                    <app-user-details [userFirstName]=\\\"user.name\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'online'\\\" [messageRead]=\\\"user.unread\\\" [list]=\\\"'userList'\\\"></app-user-details>\\n                  </div>\\n                </li>\\n              </div>\\n              <ng-template #noUser>\\n                <p class=\\\"text-center text-light\\\">No Online User</p>\\n              </ng-template>\\n            </ul>\\n          </div>\\n        </nav>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-12 displayNoneMobile col-sm-4 col-md-4 people-list p-0\\\" id=\\\"people-list\\\">\\n\\n      <div class=\\\"p-3 text-white textCapitalize textCenter\\\">\\n        {{userInfo.firstName}} {{userInfo.lastName}}\\n        <i class=\\\"fa fa-circle online\\\" *ngIf=\\\"disconnectedSocket == false\\\"></i>\\n        <i class=\\\"fa fa-circle offline\\\" *ngIf=\\\"disconnectedSocket == true\\\"></i>\\n\\n        <br>\\n        <br>\\n        <button (click)=\\\"logout()\\\" class=\\\"btn btn-info customButton\\\">Logout</button>\\n      </div>\\n      <div class=\\\"text-center mb-3\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light btn-sm\\\" [routerLink]=\\\"['/group-chat']\\\">Create New Group</button>\\n      </div>\\n\\n      <ul class=\\\"list\\\">\\n\\n        <li class=\\\"p-2 typeOfChats\\\">\\n          Chat Rooms:\\n        </li>\\n        <div *ngIf=\\\"chatRooms!==null;else noRoom\\\">\\n          <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let room of chatRooms\\\" [ngClass]=\\\"{'activeChat': room.chatting == true}\\\" (click)=\\\"roomSelectedToChat(room.roomId,room.roomName)\\\">\\n            <div class=\\\"userPresence\\\">\\n\\n              <app-user-details [userFirstName]=\\\"room.roomName\\\" [userLastName]=\\\"''\\\" [roomId]=\\\"room.roomId\\\" [userStatus]=\\\"'Admin - '+room.creator\\\"\\n                [messageRead]=\\\"\\\" [list]=\\\"'chatRoom'\\\"></app-user-details>\\n            </div>\\n          </li>\\n        </div>\\n        <ng-template #noRoom>\\n          <p class=\\\"text-center text-light\\\">No Chat Room</p>\\n        </ng-template>\\n      </ul>\\n\\n      <ul class=\\\"list\\\">\\n        <li class=\\\"p-2 typeOfChats\\\">\\n          Online Users:\\n        </li>\\n        <div *ngIf=\\\"userList.length>1;else noUser\\\">\\n          <li class=\\\"clearfix cursorPointer\\\" *ngFor=\\\"let user of userList\\\">\\n            <div class=\\\"userPresence\\\" *ngIf=\\\"user.userId != userInfo.userId\\\" style=\\\"cursor:text\\\">\\n              <app-user-details [userFirstName]=\\\"user.name\\\" [userLastName]=\\\"''\\\" [userStatus]=\\\"'online'\\\" [messageRead]=\\\"user.unread\\\" [list]=\\\"'userList'\\\"></app-user-details>\\n            </div>\\n          </li>\\n        </div>\\n        <ng-template #noUser>\\n          <p class=\\\"text-center text-light\\\">No Online User</p>\\n        </ng-template>\\n      </ul>\\n\\n    </div>\\n    <!-- chat room messaging center -->\\n    <div class=\\\"col-12 col-sm-8 col-md-8 chat\\\" *ngIf=\\\"receiverId!=userInfo.userId;else mainpage\\\">\\n      <div class=\\\"chat-header clearfix mobileMenu\\\">\\n        <app-first-char [name]=\\\"receiverName\\\" [userBg]=\\\"'green'\\\" [userColor]=\\\"'white'\\\"></app-first-char>\\n\\n        <div class=\\\"chat-about\\\">\\n          <div class=\\\"chat-with\\\">Chat in {{receiverName}} Room</div>\\n\\n          <div *ngIf=\\\"roomId==receiverId\\\">\\n            <p *ngIf=\\\"typingUserName!=''\\\">{{typingUserName}} is typing..</p>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- end chat-header -->\\n      <div *ngIf=\\\"!joinRoomStatus(receiverId);else chatTime\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btn-block btn-lg\\\" id=\\\"btnPlace\\\" (click)=\\\"roomJoining(receiverId,receiverName)\\\">Join</button>\\n      </div>\\n      <ng-template #chatTime>\\n\\n        <div #scrollMe [scrollTop]=\\\"(scrollToChatTop)?0:scrollMe.scrollHeight\\\" class=\\\"chat-history\\\">\\n\\n          <ul>\\n            <li class=\\\"textCenter\\\" *ngIf=\\\"receiverName\\\">\\n\\n              <span class=\\\"cursorPointer\\\" (click)=\\\"loadEarlierPageOfChat()\\\">Load Previous Chat</span>\\n\\n              <br>\\n\\n              <span *ngIf=\\\"loadingPreviousChat == true\\\">Loading...</span>\\n\\n            </li>\\n            <li class=\\\"clearfix\\\" *ngFor=\\\"let message of messageList\\\">\\n              <div class=\\\"message-data\\\" [ngClass]=\\\"{'align-right': message.senderId == userInfo.userId}\\\">\\n                <span class=\\\"message-data-time\\\">{{message?.createdOn | date: 'medium' }}</span> &nbsp; &nbsp;\\n                <span class=\\\"message-data-name floatLeft\\\" *ngIf=\\\"message.senderId != userInfo.userId\\\">\\n                  <i class=\\\"fa fa-circle online\\\"></i> {{ message?.senderName }}</span>\\n                <span class=\\\"message-data-name\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\">{{ message?.senderName }}</span>\\n                <i class=\\\"fa fa-circle me\\\" *ngIf=\\\"message.senderId == userInfo.userId\\\"></i>\\n\\n              </div>\\n              <div class=\\\"message\\\" [ngClass]=\\\"{'float-right other-message': message.senderId == userInfo.userId, 'my-message': message.senderId != userInfo.userId}\\\">\\n                {{message?.message}}\\n              </div>\\n            </li>\\n\\n\\n          </ul>\\n\\n        </div>\\n\\n        <!-- end chat-history -->\\n\\n        <div class=\\\"chat-message clearfix p-2\\\" *ngIf=\\\"receiverName\\\">\\n          <textarea name=\\\"message-to-send\\\" id=\\\"message-to-send\\\" (keydown)=\\\"sendMessageUsingKeypress($event)\\\" [(ngModel)]=\\\"messageText\\\"\\n            placeholder=\\\"Type your message\\\" rows=\\\"3\\\" (keyup)=\\\"onTyping($event)\\\"></textarea>\\n\\n          <button (click)=\\\"sendMessage()\\\">Send</button>\\n\\n        </div>\\n\\n      </ng-template>\\n      <!-- end chat-message -->\\n\\n    </div>\\n\\n    <ng-template #mainpage>\\n      <div class=\\\"col-12 col-sm-8 col-md-8 chat\\\">\\n        <div id=\\\"demo\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n          <ul class=\\\"carousel-indicators\\\">\\n            <li data-target=\\\"#demo\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n            <li data-target=\\\"#demo\\\" data-slide-to=\\\"1\\\"></li>\\n            <li data-target=\\\"#demo\\\" data-slide-to=\\\"2\\\"></li>\\n          </ul>\\n          <div class=\\\"carousel-inner\\\">\\n            <div class=\\\"carousel-item active\\\">\\n              <img src=\\\"../../../assets/slide1.jpeg\\\" alt=\\\"Whatsapp\\\" width=\\\"1100\\\" height=\\\"500\\\" class=\\\"img-fluid\\\">\\n              <div class=\\\"carousel-caption\\\">\\n                <h3>Whatsapp</h3>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"carousel-item\\\">\\n              <img src=\\\"../../../assets/slide2.jpg\\\" alt=\\\"Connecting\\\" width=\\\"1100\\\" height=\\\"500\\\" class=\\\"img-fluid\\\">\\n              <div class=\\\"carousel-caption\\\">\\n                <h3>Connecting with friends!</h3>\\n\\n              </div>\\n            </div>\\n            <div class=\\\"carousel-item\\\">\\n              <img src=\\\"../../../assets/slide3.jpg\\\" alt=\\\"Checkout\\\" width=\\\"1100\\\" height=\\\"500\\\" class=\\\"img-fluid\\\">\\n              <div class=\\\"carousel-caption\\\">\\n                <h3>Someone messaged you</h3>\\n\\n              </div>\\n            </div>\\n          </div>\\n          <a class=\\\"carousel-control-prev\\\" href=\\\"#demo\\\" data-slide=\\\"prev\\\">\\n            <span class=\\\"carousel-control-prev-icon\\\"></span>\\n          </a>\\n          <a class=\\\"carousel-control-next\\\" href=\\\"#demo\\\" data-slide=\\\"next\\\">\\n            <span class=\\\"carousel-control-next-icon\\\"></span>\\n          </a>\\n        </div>\\n\\n\\n      </div>\\n    </ng-template>\\n\\n  </div>\\n  <!-- end chat -->\\n\\n</div>\\n<!-- end container -->\\n\"","import { Component, OnInit} from '@angular/core';\nimport { SocketService } from './../../socket.service';\nimport { AppService } from './../../app.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n  providers: [SocketService]\n})\n\nexport class ChatBoxComponent implements OnInit {\n\n\n  public authToken: any;\n  public messageText: any;\n  public messageList: any = [];\n  public unreadMsgList: any = [];\n  public disconnectedSocket: boolean;\n  public userInfo: any;\n  public receiverId: any;\n  public receiverName: any;\n  public userList: any = [];\n  public chatRooms: any = [];\n  public joinRooms: any = [];\n  public pageValue = 0;\n  public loadingPreviousChat = false;\n  public scrollToChatTop = false;\n  public param1: string;\n  public param2: string;\n  public param3: string;\n  public unreadList: any = [];\n  public unreadOfflineList: any = [];\n  public count;\n  public typingUserName: any = '';\n  public typingUserId: String = '';\n  public roomId: any;\n\n\n  constructor(\n    public appService: AppService,\n    public socketService: SocketService,\n    public router: Router,\n    private _route: ActivatedRoute,\n    private toastr: ToastrService) {\n    this.receiverId = Cookie.get('receiverId');\n\n    this.receiverName = Cookie.get('receiverName');\n  }\n\n\n\n  ngOnInit() {\n    this.authToken = Cookie.get('authtoken');\n    this.receiverId = Cookie.get('receiverId');\n\n    this.receiverName = Cookie.get('receiverName');\n    console.log(this.authToken);\n    this.userInfo = this.appService.getUserInfoFromLocalstorage();\n    this.appService.getChatGroup(this.authToken).subscribe(\n      Response => {\n        this.chatRooms = Response.data;\n        this.userList = [];\n        if (this.chatRooms !== null) {\n          for (const i of this.chatRooms) {\n            i.chatting = 'false';\n\n          }\n        }\n        console.log(this.chatRooms);\n      },\n      error => {\n        this.toastr.error('some error occured');\n      });\n\n    // this part is for joining room via link\n    this.param1 = this._route.snapshot.paramMap.get('roomId');\n    this.param2 = this._route.snapshot.paramMap.get('roomName');\n    if (this.param1 && this.param2) {\n      this.param2 = atob(this.param2);\n      this.roomJoining(this.param1, this.param2);\n      this.roomSelectedToChat(this.param1, this.param2);\n    }\n    // end\n    if (this.receiverId != null && this.receiverId !== undefined && this.receiverId !== '') {\n      this.roomSelectedToChat(this.receiverId, this.receiverName);\n    }\n\n\n    this.verifyUserConfirmation(this.authToken);\n\n    this.getMessageFromAUser();\n    this.getOnTypingData();\n    this.setJoinedRoom();\n  }\n\n\n\n  public verifyUserConfirmation: any = (token) => {\n    this.socketService.verifyUser().subscribe(\n      (data) => {\n\n        this.disconnectedSocket = false;\n        this.socketService.setUser(token);\n\n        this.getOnlineUserList();\n      });\n  }// end\n\n\n  //  Online user list methdlist start\n  public getOnlineUserList: any = () => {\n\n    this.socketService.onlineUserList()\n      .subscribe((userList) => {\n\n        this.userList = [];\n        for (const i of userList) {\n          const temp = { 'userId': i.userId, 'name': i.fullName, 'unread': 0, 'chatting': false };\n          this.userList.push(temp);\n        }\n        console.log(this.userList);\n\n\n\n      }); // end online-user-list\n\n  } // online userlist method end\n\n  // Method to select a room for chatting\n  public roomSelectedToChat = (roomId, roomName) => {\n    console.log('clicked');\n    this.chatRooms.map((room) => {\n      if (room.roomId === roomId) {\n        room.chatting = true;\n      } else {\n        room.chatting = false;\n      }\n\n    });\n    Cookie.set('receiverId', roomId);\n\n    Cookie.set('receiverName', roomName);\n\n    this.receiverName = roomName;\n\n    this.receiverId = roomId;\n\n    this.messageList = [];\n\n    this.pageValue = 0;\n    this.getPreviousChatWithAUser();\n\n\n\n  }// end select room\n\n  // method to check whether the user has joined chat room or not\n  public joinRoomStatus = (roomId): boolean => {\n    if (this.joinRooms.length > 0) {\n      if (this.joinRooms.indexOf(roomId) !== -1) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false; // no room join\n    }\n  }// end\n\n  // method to start room joining process\n  public roomJoining = (roomId, roomName) => {\n    console.log('clicked join room');\n    const name = `${this.userInfo.firstName} ${this.userInfo.lastName}`;\n    this.socketService.joinRoom(roomId, roomName, name);\n\n\n  }// end\n\n  // method to get message from serverabout joining\n  public setJoinedRoom = () => {\n    this.socketService.setJoinedRoom().subscribe(\n      data => {\n        console.log(data);\n        this.joinRooms.push(data.roomId);\n        this.joinRooms = this.joinRooms.filter((val, index) => {\n          return this.joinRooms.indexOf(val) === index;\n        });\n        console.log(data.roomId);\n        const name = `${this.userInfo.firstName} ${this.userInfo.lastName}`;\n        if (data.joinedUser === name) {\n          this.toastr.success(`You have Joined ${data.roomName} room`);\n        } else {\n          this.toastr.success(`${data.joinedUser} have Joined ${data.roomName} room`);\n        }\n\n        console.log(this.joinRooms);\n      }\n    );\n\n  }// end\n\n  // method to send message using enter\n  public sendMessageUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n\n      this.sendMessage();\n\n    }\n\n  } // end sendMessageUsingKeypress\n\n\n  // Method to send message\n  public sendMessage: any = () => {\n\n    if (this.messageText) {\n\n      const chatMsgObject = {\n        senderName: this.userInfo.firstName + ' ' + this.userInfo.lastName,\n        senderId: this.userInfo.userId,\n        receiverName: Cookie.get('receiverName'),\n        receiverId: Cookie.get('receiverId'),\n        message: this.messageText,\n        createdOn: new Date()\n      }; // end chatMsgObject\n\n      this.socketService.SendChatMessage(chatMsgObject);\n      this.pushToChatWindow(chatMsgObject);\n\n\n\n    } else {\n      this.toastr.warning('text message can not be empty');\n\n    }\n\n  } // end sendMessage\n\n  // Method to push your chats to chat window\n  public pushToChatWindow: any = (data) => {\n\n    this.messageText = '';\n\n\n    this.messageList.push(data);\n    this.scrollToChatTop = false;\n\n\n  }// end push to chat window\n\n  // Method to get all messages from all users of chat Room\n  public getMessageFromAUser: any = () => {\n\n    this.socketService.chatByRoomId()\n      .subscribe((data) => {\n        if (data.senderId === this.typingUserId) {\n\n          this.roomId = '';\n          this.typingUserName = '';\n        }\n\n        (this.receiverId === data.receiverId) ? this.messageList.push(data) : '';\n        /* this.unreadMessages();  */\n        this.toastr.success(`${data.senderName} says : ${data.message}`);\n        this.scrollToChatTop = false;\n\n      }); // end subscribe\n\n  }// end get message from a use\n\n  // Getting previous messages f chat Room\n  public getPreviousChatWithAUser: any = () => {\n    const previousData = (this.messageList.length > 0 ? this.messageList.slice() : []);\n\n    this.appService.getChatsForGroup(this.receiverId, this.pageValue * 10)\n      .subscribe((apiResponse) => {\n\n\n        if (apiResponse.status === 200) {\n\n          this.messageList = apiResponse.data.concat(previousData);\n\n        } else {\n\n          this.messageList = previousData;\n          this.toastr.warning('No Messages available');\n        }\n\n        this.loadingPreviousChat = false;\n\n      }, (err) => {\n\n        this.toastr.error('some error occured');\n\n\n      });\n\n  }// end\n\n  // This is for typing,it notifies evry1 of room that who is typing\n  public onTyping = (event: any) => {\n\n    // when enter is pressed then typing emit event should not be called\n    if (event.keyCode !== 13) {\n      const data = {\n        'typingUser': this.userInfo.firstName,\n        'typingUserId': this.userInfo.userId,\n        'roomId': this.receiverId\n      };\n      // this is for when user types but clear the message text then evry1 should notify that now user is not typing\n      if (this.messageText === '') {\n        const data = {\n          'typingUser': '',\n          'typingUserId': '',\n          'roomId': this.receiverId\n        };\n\n        this.socketService.typing(data);\n\n      } // end\n\n      // this is when user is typing then everyone should get notification that someone is typing\n      if (this.messageText !== '') {\n\n        console.log(`typing`);\n\n        this.socketService.typing(data);\n\n      }\n    }\n\n\n  }// end onTyping function\n\n  // function to get data of ontyping like who is typing and room Id info\n  public getOnTypingData = () => {\n    this.socketService.getTypingUser().subscribe(\n      (typedUserData) => {\n\n        this.typingUserName = typedUserData.typingUser;\n        this.typingUserId = typedUserData.typingUserId;\n        this.roomId = typedUserData.roomId;\n        console.log(this.roomId);\n        this.toastr.success(`${this.typingUserName} is typing`);\n\n\n\n      }\n    );\n\n  }// end\n\n  public loadEarlierPageOfChat: any = () => {\n\n    this.loadingPreviousChat = true;\n\n    this.pageValue++;\n    this.scrollToChatTop = true;\n\n    this.getPreviousChatWithAUser();\n\n  } // end\n\n  public logout: any = () => {\n\n    this.appService.logout()\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status === 200) {\n          console.log('logout called');\n          Cookie.delete('authtoken');\n\n          Cookie.delete('receiverId');\n\n          Cookie.delete('receiverName');\n\n          this.socketService.exitSocket();\n\n          this.router.navigate(['/']);\n\n        } else {\n          this.toastr.error(apiResponse.message);\n\n        } // end condition\n\n      }, (err) => {\n        this.toastr.error('some error occured');\n\n\n      });\n\n  } // end logout\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Injectable()\nexport class ChatRouteGuardService implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    console.log('in guard service');\n\n    if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { SharedModule } from '../shared/shared.module';\nimport { ChatRouteGuardService } from './chat-route-guard.service';\nimport { GroupChatComponent } from './group-chat/group-chat.component';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ModalModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'chat', component: ChatBoxComponent, canActivate: [ChatRouteGuardService] },\n      { path: 'chat/:roomId/:roomName', component: ChatBoxComponent},\n      {path: 'group-chat/:roomId', component: GroupChatComponent},\n      {path: 'group-chat/:roomId/:roomName', component: GroupChatComponent},\n      {path: 'group-chat', component: GroupChatComponent}\n    ]),\n    SharedModule\n  ],\n  declarations: [ChatBoxComponent, GroupChatComponent],\n  providers: [ChatRouteGuardService]\n})\nexport class ChatModule { }\n","module.exports = \"button:disabled {\\n  cursor: not-allowed;\\n\\n}\\n#my-link{\\n  cursor:pointer;\\n}\\n\"","module.exports = \"<div class=\\\"row p-0 m-0\\\">\\n  <div class=\\\"col-sm\\\"></div>\\n   <!-- Create Group Design -->\\n  <div *ngIf=\\\"groupChat\\\" class=\\\"col-sm p-5\\\">\\n      <h2 class=\\\"form-signin-heading\\\">Create Group</h2>\\n      <form #Group=\\\"ngForm\\\" (ngSubmit)=\\\"createGroup();Group.reset()\\\">\\n          <label for=\\\"inputName\\\" class=\\\"sr-only\\\">Group Name</label>\\n          <input type=\\\"text\\\" #nameGroup=\\\"ngModel\\\" name=\\\"groupName\\\"  maxlength=\\\"50\\\" class=\\\"form-control\\\" id=\\\"inputName\\\"\\n              [(ngModel)]=\\\"groupName\\\" placeholder=\\\"Group Name\\\" required autofocus>\\n          <br>\\n          <div [hidden]=\\\"nameGroup.valid || nameGroup.pristine\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"nameGroup.errors?.maxlength\\\">\\n                      Group Name should contain maximum 65 letters!\\n                  </div>\\n              <div *ngIf=\\\"nameGroup.errors?.required\\\">\\n                  Group Name is required!\\n              </div>\\n          </div>\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!Group.form.valid\\\">Create</button>\\n      </form>\\n  </div>\\n <!-- Create group end -->\\n\\n <!-- Edit Group Start -->\\n  <div *ngIf=\\\"editChat\\\" class=\\\"col-sm p-5\\\">\\n      <h2 class=\\\"form-signin-heading\\\">Edit Group</h2>\\n      <form #edit=\\\"ngForm\\\" (ngSubmit)=\\\"editGroup();edit.reset()\\\">\\n          <label for=\\\"inputName\\\" class=\\\"sr-only\\\">Group Name</label>\\n          <input type=\\\"text\\\" #nameGroup=\\\"ngModel\\\" name=\\\"groupName\\\" pattern=\\\"^[A-za-z0-9- ]+$\\\" maxlength=\\\"50\\\" class=\\\"form-control\\\" id=\\\"inputName\\\"\\n              [(ngModel)]=\\\"groupName\\\" placeholder=\\\"Group Name\\\" required autofocus>\\n          <br>\\n          <div [hidden]=\\\"nameGroup.valid || nameGroup.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"nameGroup.errors?.pattern\\\">\\n                  Group Name is invalid!\\n                  <div *ngIf=\\\"nameGroup.errors?.maxlength\\\">\\n                      Group Name should contain maximum 65 letters!\\n                  </div>\\n              </div>\\n              <div *ngIf=\\\"nameGroup.errors?.required\\\">\\n                  Group Name is required!\\n              </div>\\n          </div>\\n\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!edit.form.valid\\\">Edit</button>\\n      </form>\\n  </div>\\n\\n  <!-- Delete Chat Design start -->\\n  <div *ngIf=\\\"deleteChat\\\" class=\\\"col-sm p-5\\\">\\n      <div class=\\\"row mt-5\\\">\\n          <div class=\\\"col-12\\\">\\n              <img src=\\\"https://fossbytes.com/wp-content/uploads/2017/10/whatsapp-delete-message-640x360.jpg\\\" style=\\\"width:70vw;height:50vh\\\"\\n                  class=\\\"img-fluid d-block mx-auto\\\">\\n          </div>\\n      </div>\\n  </div>\\n\\n  <!-- Mark as Close Start -->\\n  <div *ngIf=\\\"markAsClose\\\" class=\\\"col-sm p-5\\\">\\n      <div class=\\\"row mt-5\\\">\\n          <div class=\\\"col-12\\\">\\n              <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/CLOSED_logo.jpg/800px-CLOSED_logo.jpg\\\" style=\\\"width:70vw;height:50vmin\\\"\\n                  class=\\\"img-fluid d-block mx-auto\\\">\\n          </div>\\n      </div>\\n  </div>\\n\\n  <!-- Share email design start -->\\n  <div *ngIf=\\\"share\\\" class=\\\"col-sm p-5\\\">\\n      <h2 class=\\\"form-signin-heading\\\">Share Email</h2>\\n      <form #share=\\\"ngForm\\\" (ngSubmit)=\\\"shareLink();share.reset()\\\">\\n          <label for=\\\"inputName\\\" class=\\\"sr-only\\\">Enter Email</label>\\n          <input type=\\\"text\\\" #emailId=\\\"ngModel\\\" name=\\\"groupName\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" class=\\\"form-control\\\"\\n              id=\\\"inputName\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Enter Email\\\" required autofocus>\\n          <br>\\n          <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n                  Email is invalid!\\n              </div>\\n              <div *ngIf=\\\"emailId.errors?.required\\\">\\n                  Email is required!\\n              </div>\\n          </div>\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!share.form.valid\\\">Share</button>\\n      </form>\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {  ActivatedRoute, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n\n@Component({\n  selector: 'app-group-chat',\n  templateUrl: './group-chat.component.html',\n  styleUrls: ['./group-chat.component.css']\n})\nexport class GroupChatComponent implements OnInit {\n  public groupName: String;\n  public receiverName: String;\n  public authToken: String;\n  public receiverId: String;\n  public param1: String;\n  public param2: String;\n  public email: any;\n  public groupChat = true;\n  public share = false;\n  public editChat = false;\n  public deleteChat = false;\n  public markAsClose = false;\n\n  constructor(public appservice: AppService,\n    private _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService) {}\n\n  ngOnInit() {\n    this.receiverName = Cookie.get('receiverName');\n    this.receiverId = Cookie.get('receiverId');\n    this.authToken = Cookie.get('authtoken');\n    this.param1 = this._route.snapshot.paramMap.get('roomId');\n    this.param2 = this._route.snapshot.paramMap.get('roomName');\n    if (this.param1 && !this.param2) {\n      this.editChat = true;\n      this.groupChat = false;\n    }\n\n    if ( this.param1 && this.param2) {\n      if (this.param1 && this.param2 === 'delete') {\n        this.deleteChat = true;\n        this.groupChat = false;\n\n      this.delete(this.param1);\n      } else if (this.param1 && this.param2 === 'close') {\n         this.markAsClose = true;\n         this.groupChat = false;\n         this.close(this.param1);\n      } else  {\n        this.share = true;\n        this.groupChat = false;\n      }\n\n    }\n\n  }\n\n  // Method to create group\n  public createGroup = () => {\n    const data = {\n      'name': this.groupName,\n      'creator' : this.receiverName,\n\n    };\n    this.appservice.createGroup(data, this.authToken).subscribe(\n      Response => {\n        if (Response.status === 200) {\n\n          this.toastr.success('Chat Room Created');\n          setTimeout(() => {\n\n            this.router.navigate(['/chat']);\n\n          }, 2000);\n\n        } else {\n          this.toastr.error(Response.message);\n        }\n\n      },\n      error => {\n        this.toastr.error('some error occured');\n      }\n    );\n  }// end\n\n  // Method to edit group\n  public editGroup = () => {\n    const data = {\n      'name' : this.groupName,\n      'roomId' : this.param1\n\n    };\n    console.log(this.param1);\n    this.appservice.editGroup(data, this.authToken).subscribe(\n      Response => {\n        if (Response.status === 200) {\n\n          this.toastr.success('Chat Room Edited Successfully!');\n          setTimeout(() => {\n\n            this.router.navigate(['/chat']);\n\n          }, 2000);\n\n        } else {\n          this.toastr.error(Response.message);\n        }\n\n      },\n      error => {\n        this.toastr.error('some error occured');\n      }\n    );\n  }// end\n\n  // Method to share a link\n  public shareLink = () => {\n    const data = {\n      'roomId': this.param1,\n      'roomName': this.param2,\n      'email' : this.email,\n\n    };\n    this.appservice.shareLink(data, this.authToken).subscribe(\n      Response => {\n        if (Response.status === 200) {\n          this.toastr.success('Link has been Successfully Shared!');\n          setTimeout(() => {\n\n            this.router.navigate(['/chat']);\n\n          }, 2000);\n        } else {\n          this.toastr.error(Response.message);\n        }\n        },\n      error => {\n          this.toastr.error(`Some Error Occured!`);\n      });\n\n  }// end\n\n  // method to delete a chat.\n  public delete = (roomId) => {\n    console.log(roomId);\n     this.appservice.deleteGroup(roomId, this.authToken).subscribe(\n      Response => {\n        if (Response.status === 200) {\n\n          this.toastr.success('Chat Room Deleted Successfully!');\n          setTimeout(() => {\n\n            this.router.navigate(['/chat']);\n\n          }, 2000);\n\n        } else {\n          this.toastr.error(Response.message);\n        }\n\n      },\n      error => {\n        this.toastr.error('some error occured');\n      }\n     );\n  }// end\n\n  public close = (roomId) => {\n    this.appservice.close(roomId, this.authToken).subscribe(\n      Response => {\n        if (Response.status === 200) {\n\n          this.toastr.success('Chat Room is Closed!');\n          setTimeout(() => {\n\n            this.router.navigate(['/chat']);\n\n          }, 2000);\n\n        } else {\n          this.toastr.error(Response.message);\n        }\n\n      },\n      error => {\n        this.toastr.error('some error occured');\n      }\n    );\n  }\n\n}\n","module.exports = \".crop {\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 3em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n  }\"","module.exports = \"<div   class=\\\"crop\\\" [style.color]=\\\"userColor ? userColor :'white'\\\" [style.background]=\\\"userBg ? userBg :'blue'\\\">\\n  {{firstChar}}\\n</div>\\n\"","import { Component, OnChanges, Input, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit, OnChanges {\n\n  @Input() name: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n      this._name = this.name;\n      this.firstChar = this._name[0];\n\n  } // end ngOnInit\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    const name  = changes.name;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { FirstCharComponent } from './first-char/first-char.component';\nimport { GroupChatComponent } from '../chat/group-chat/group-chat.component';\nimport { RouterModule, Routes } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      { path: 'group-chat/:roomId/:roomName', component: GroupChatComponent},\n      { path: 'group-chat/:roomId', component: GroupChatComponent}\n    ])\n  ],\n  declarations: [UserDetailsComponent, FirstCharComponent],\n  exports: [\n    UserDetailsComponent,\n    FirstCharComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \".crop {\\n    border-radius: 100%;\\n    line-height: 1em;\\n    padding: 1em;\\n    text-align: center;\\n    margin: 0em;\\n    width: 3em;\\n    height: 3em;\\n    float: left;\\n    text-transform: uppercase;\\n  }\\n  \\n  .about {\\n    float: left;\\n    padding-left: 0.4em;\\n  }\\n  \\n  .online,\\n  .offline,\\n  .me,\\n  .warning {\\n    margin-right: 3px;\\n    font-size: 0.8em;\\n  }\\n  \\n  .online {\\n    color: #86BB71;\\n  }\\n  \\n  .offline {\\n    color: #E38968;\\n  }\\n  \\n  .me {\\n    color: #94C2ED;\\n  }\\n  \\n  .warning {\\n    color: #00c8e7;\\n  }\\n  \\n  .status {\\n    color: #92959E;\\n  }\\n  \\n  .name {\\n    float: left;\\n  }\"","module.exports = \"<div class=\\\"crop\\\" [style.color]=\\\"'white'\\\" [style.background]=\\\"'blue'\\\">\\n  {{firstChar}}\\n</div>\\n<div class=\\\"about\\\">\\n  <div class=\\\"name\\\">{{userFirstName}} {{userLastName}}\\n    <i *ngIf=\\\"messageRead>0\\\" class=\\\"fa fa-circle warning\\\">{{messageRead}}</i>\\n  </div>\\n\\n  <div *ngIf=\\\"list=='chatRoom'\\\" style=\\\"text-align:right\\\">\\n    <span [routerLink]=\\\"['/group-chat',roomId,'delete']\\\"><i class=\\\"fa fa-trash-o mr-2\\\" title=\\\"Delete\\\"></i></span>\\n    <span [routerLink]=\\\"['/group-chat',roomId]\\\"><i class=\\\"fa fa-edit mr-2\\\" title=\\\"Edit\\\"></i></span>\\n    <span [routerLink]=\\\"['/group-chat',roomId,roomName]\\\"><i class=\\\"fa fa-share-alt mr-2\\\" title=\\\"Share\\\"></i></span>\\n    <span [routerLink]=\\\"['/group-chat',roomId,'close']\\\"><i class=\\\"fa fa-close mr-2\\\" title=\\\"Mark as Close\\\"></i></span>\\n  </div>\\n  <span *ngIf=\\\"list!='chatRoom'\\\"><br/></span>\\n  <div class=\\\"status\\\">\\n    <i class=\\\"fa fa-circle\\\" [ngClass]=\\\"userStatus\\\" style=\\\"font-size:2vmin\\\"></i> {{userStatus}}\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport {  ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  @Input() userFirstName: any;\n  @Input() userLastName: string;\n  @Input() userStatus: string;\n  @Input() messageRead?: any;\n  @Input() roomId: string;\n  @Input() list: string;\n\n  public firstChar: string;\n  public roomName: string;\n  public authToken: any;\n\n\n  constructor( public appService: AppService,\n    private _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService) {}\n\n  ngOnInit(): void {\n\n      this.firstChar = this.userFirstName[0];\n      this.roomName = btoa(this.userFirstName);\n\n  } // end ngOnInit\n\n\n  // handling the click\n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport * as io from 'socket.io-client';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from '@angular/common/http';\n\n@Injectable()\nexport class SocketService {\n\n  private url = 'http://chatapi.gajalportfolio.xyz';\n\n  private socket;\n\n\n  constructor(public http: HttpClient) {\n    // connection is being created.\n    // that handshake\n    this.socket = io(this.url);\n\n  }\n\n  // events to be listened\n\n  public verifyUser = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('verifyUser', (data) => {\n\n        observer.next(data);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end verifyUser\n\n  // emit event\n  public setUser = (authToken) => {\n    this.socket.emit('setUser', authToken);\n    console.log(authToken);\n  }\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('online-user-list', (userList) => {\n\n        observer.next(userList);\n        console.log(userList);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end onlineUserList\n  public joinRoom = (roomId, roomName, joinUser) => {\n    const data = {\n      'roomId': roomId,\n      'roomName': roomName,\n      'joinedUser': joinUser\n    };\n    this.socket.emit('joinRoom', data);\n  }\n\n  public setJoinedRoom = () => {\n    return Observable.create((observer) => {\n\n      this.socket.on('setJoinedRoom', (joinedRoom) => {\n\n        observer.next(joinedRoom);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  }\n\n  public SendChatMessage = (chatMsgObject) => {\n\n    this.socket.emit('room-msg', chatMsgObject);\n\n  }\n\n  public chatByRoomId = () => {\n    return Observable.create((observer) => {\n      this.socket.on('receiveMsg', (data) => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n  }\n\n  public typing = (data) => {\n    this.socket.emit('typing', data);\n  }\n\n  public getTypingUser = () => {\n    return Observable.create((observer) => {\n      this.socket.on('userTyping', (data) => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n  }\n\n\n  public exitSocket = (): any => {\n    this.socket.emit('disconnect');\n  }\n\n}\n","module.exports = \"button:disabled {\\n  cursor: not-allowed;\\n\\n}\\n#my-link{\\n  cursor:pointer;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">My Chat</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" id=\\\"my-link\\\" (click)=\\\"goToSignUp()\\\">SIGNUP</a>\\n          </li>\\n      </ul>\\n  </div>\\n\\n</nav>\\n<div class=\\\"row p-0 m-0\\\">\\n  <div class=\\\"col-sm\\\"></div>\\n  <div class=\\\"col-sm p-5\\\">\\n      <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\n      <form #signIn=\\\"ngForm\\\" (ngSubmit)=\\\"signinFunction(); signIn.reset()\\\">\\n          <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n          <input type=\\\"email\\\" #emailId=\\\"ngModel\\\"  name=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\"\\n              required autofocus>\\n          <br>\\n          <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"emailId.errors?.pattern\\\">\\n                  Email is invalid!\\n                </div>\\n                <div *ngIf=\\\"emailId.errors?.required\\\">\\n                    Email is required!\\n                </div>\\n          </div>\\n          <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n          <input type=\\\"password\\\" #pass=\\\"ngModel\\\" name=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"\\n              required>\\n          <br>\\n          <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n              Password is required!\\n          </div>\\n              <p class=\\\"text-danger\\\" style=\\\"cursor:pointer\\\" (click)=\\\"forgotPassword(emailId.value)\\\"><u>Forgot Password?</u></p>\\n          <div *ngIf=\\\"emailNeed==0\\\">\\n              <p class=\\\"text-info\\\">Please provide Email!</p>\\n          </div>\\n          <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\"  [disabled]=\\\"!signIn.form.valid\\\" >Sign in</button>\\n      </form>\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { AppService } from './../../app.service';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: any;\n  public password: any;\n  public emailNeed = 1;\n\n  myStyle: object = {};\n  myParams: object = {};\n  width = 100;\n  height = 100;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService) {}\n\n  ngOnInit() {\n    if (Cookie.get('receiverId')) {\n      this.router.navigate(['/chat']);\n\n    }\n    this.myStyle = {\n      'position': 'fixed',\n      'width': '100%',\n      'height': '100%',\n      'z-index': -1,\n      'top': 0,\n      'left': 0,\n      'right': 0,\n      'bottom': 0,\n  };\n\nthis.myParams = {\n      particles: {\n          number: {\n              value: 200,\n          },\n          color: {\n              value: '#ff0000'\n          },\n          shape: {\n              type: 'triangle',\n          },\n  }\n};\n  }\n\n  public goToSignUp: any = () => {\n\n    this.router.navigate(['/sign-up']);\n\n  } // end goToSignUp\n\n  public signinFunction: any = () => {\n\n    if (!this.email) {\n      this.toastr.warning('enter email');\n\n\n    } else if (!this.password) {\n\n      this.toastr.warning('enter password');\n\n\n    } else {\n\n      const data = {\n        email: this.email,\n        password: this.password\n      };\n\n      this.appService.logInFunction(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status === 200) {\n            console.log(apiResponse);\n\n             Cookie.set('authtoken', apiResponse.data.authToken);\n             Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n             Cookie.set('receiverName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n\n             this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails);\n             this.router.navigate(['/chat']);\n\n          } else {\n\n            this.toastr.error(apiResponse.message);\n            console.log(apiResponse.message);\n\n          }\n\n        }, (err) => {\n          this.toastr.error('some error occured');\n\n        });\n\n    } // end condition\n\n  } // end signinFunction\n\n  public forgotPassword = (email): any => {\n    if (email === undefined) {\n      this.emailNeed = 0;\n    } else {\n      console.log(email);\n      this.appService.forgotPassword(email).subscribe(\n        Response => {\n          if (Response.status === 200) {\n            this.toastr.success('Mail has been sent.Check for further process!');\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          } else {\n            this.toastr.error(Response.message);\n          }\n\n        },\n        error => {\n          this.toastr.error(`Some Error Occured!`);\n        });\n    }\n  }\n\n}\n","module.exports = \"button:disabled {\\n  cursor: not-allowed;\\n\\n}\\n#my-link{\\n  cursor:pointer;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">My Chat</a>\\n\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"my-link\\\" (click)=\\\"goToSignUp()\\\">Sign-Up</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n</nav>\\n\\n<div class=\\\"row p-0 m-0\\\">\\n  <div class=\\\"col-sm\\\"></div>\\n  <div class=\\\"col-sm p-5\\\">\\n    <h2 class=\\\"form-signin-heading\\\">Reset Password</h2>\\n    <form #resetForm=\\\"ngForm\\\" (ngSubmit)=\\\"resetPassword();resetForm.reset()\\\">\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">New Password</label>\\n      <input type=\\\"password\\\" #pass=\\\"ngModel\\\" name=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"\\n        required>\\n      <br>\\n      <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"pass.errors?.required\\\">\\n          Password is required!\\n        </div>\\n      </div>\\n      <label for=\\\"confirmPassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n      <input type=\\\"password\\\" #confirmpass=\\\"ngModel\\\" name=\\\"confirmpassword\\\" id=\\\"confirmPassword\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n        placeholder=\\\"Confirm Password\\\" required>\\n      <br>\\n      <div [hidden]=\\\"confirmpass.valid || confirmpass.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Confirm Password is required!\\n      </div>\\n\\n      <div *ngIf=\\\"notMatch==1\\\">\\n        <p class=\\\"text-danger\\\">Password and confirm Password does not match!</p>\\n      </div>\\n\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!resetForm.form.valid\\\">Reset</button>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public password: any;\n  public confirmPassword: any;\n  public notMatch = 0;\n\n  constructor(private _route: ActivatedRoute,\n     public appservice: AppService,\n     public router: Router,\n     private toastr: ToastrService) {}\n\n  ngOnInit() {\n  }\n\n  public goToSignUp = () => {\n    this.router.navigate(['/sign-up']);\n  }\n\n  public resetPassword = () => {\n    const encodedEmail = this._route.snapshot.paramMap.get('id');\n    const decodedEmail = atob(encodedEmail);\n    const finalEmail = decodedEmail.substr(0, decodedEmail.length - 17);\n    if (this.password !== this.confirmPassword) {\n      this.notMatch = 1;\n\n    } else {\n      console.log(finalEmail);\n      const data = {\n        'email': finalEmail,\n        'password': this.password\n      };\n      this.appservice.resetPassword(data).subscribe(\n        Response => {\n          if (Response.status === 200) {\n              this.toastr.success(Response.message);\n            setTimeout(() => {\n              this.router.navigate(['/']);\n            }, 2000);\n          } else {\n            this.toastr.error(Response.message);\n          }\n        },\n        error => {\n          this.toastr.error(`Some Error Occured!`);\n        });\n    }\n  }\n\n}\n","module.exports = \"button:disabled {\\n  cursor: not-allowed;\\n\\n}\\n\\n#my-link{\\n  cursor:pointer;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">My Chat</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"my-link\\\" (click)=\\\"goToSignIn()\\\">LOGIN</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<div class=\\\"row p-0 m-0\\\">\\n  <div class=\\\"col-sm\\\"></div>\\n  <div class=\\\"col-sm p-5\\\">\\n    <h2 class=\\\"form-signin-heading\\\">Sign Up To Start Chat</h2>\\n    <br>\\n    <form #signUp=\\\"ngForm\\\" (ngSubmit)=\\\"signupFunction()\\\">\\n      <span>FirstName: </span>\\n      <label for=\\\"inputFirstName\\\" class=\\\"sr-only\\\">FirstName</label>\\n      <input type=\\\"text\\\" #first=\\\"ngModel\\\" id=\\\"inputFirstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"firstName\\\" placeholder=\\\"FirstName\\\"\\n        required autofocus>\\n      <br>\\n      <div [hidden]=\\\"first.pristine || first.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"first.errors?.minlength\\\">\\n          First Name should contain mimimum 2 letters\\n        </div>\\n        <div *ngIf=\\\"first.errors?.required\\\">\\n          First Name is required!\\n        </div>\\n\\n      </div>\\n\\n      <span>LastName: </span>\\n\\n      <label for=\\\"inputLastName\\\" class=\\\"sr-only\\\">LastName</label>\\n\\n      <input type=\\\"text\\\" #last=\\\"ngModel\\\" minlength=\\\"2\\\" id=\\\"inputLastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"lastName\\\"\\n        placeholder=\\\"LastName\\\" required>\\n\\n      <br>\\n      <div [hidden]=\\\"last.pristine || last.valid\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"last.errors?.minlength\\\">\\n          Last Name should contain mimimum 2 letters\\n        </div>\\n        <div *ngIf=\\\"last.errors?.required\\\">\\n          Last Name is required!\\n        </div>\\n\\n      </div>\\n      <span>Mobile: </span>\\n\\n      <label for=\\\"inputMobile\\\" class=\\\"sr-only\\\">Mobile</label>\\n\\n      <input type=\\\"number\\\" #mobileNum=\\\"ngModel\\\" id=\\\"inputMobile\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"mobile\\\" placeholder=\\\"Mobile\\\"\\n        required>\\n\\n      <br>\\n      <div [hidden]=\\\"mobileNum.valid || mobileNum.pristine\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"mobileNum.errors?.required\\\">\\n          Mobile Number is required!\\n        </div>\\n      </div>\\n      <span>Email: </span>\\n\\n      <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\\n      <input type=\\\"email\\\" #emailId=\\\"ngModel\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" name=\\\"emailId\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\"\\n        required>\\n\\n      <br>\\n      <div [hidden]=\\\"emailId.valid || emailId.pristine\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"emailId.errors?.required\\\">\\n          Email is required!\\n        </div>\\n      </div>\\n      <span>Password: </span>\\n\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\\n      <input type=\\\"password\\\" #pass=\\\"ngModel\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"pass\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"\\n        required>\\n\\n      <br>\\n      <div [hidden]=\\\"pass.valid || pass.pristine\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"pass.errors?.required\\\">\\n          Password is required!\\n        </div>\\n      </div>\\n\\n\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!signUp.form.valid\\\">Sign Up</button>\\n    </form>\\n  </div>\\n\\n  <div class=\\\"col-sm\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpResponseBase } from '@angular/common/http';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobile: any;\n  public email: any;\n  public password: any;\n\n  myStyle: object = {};\n  myParams: object = {};\n  width = 100;\n  height = 100;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.myStyle = {\n      'position': 'fixed',\n      'width': '100%',\n      'height': '100%',\n      'z-index': -1,\n      'top': 0,\n      'left': 0,\n      'right': 0,\n      'bottom': 0,\n  };\n\nthis.myParams = {\n      particles: {\n          number: {\n              value: 200,\n          },\n          color: {\n              value: '#ff0000'\n          },\n          shape: {\n              type: 'star',\n          },\n  }\n};\n  }\n\n  public goToSignIn: any = () => {\n\n    this.router.navigate(['/']);\n\n  } // end goToSignIn\n\n  public signupFunction: any = () => {\n\n    if (!this.firstName) {\n      this.toastr.warning('enter first name');\n\n    } else if (!this.lastName) {\n      this.toastr.warning('enter last name');\n\n    } else if (!this.mobile) {\n      this.toastr.warning('enter mobile');\n\n    } else if (!this.email) {\n      this.toastr.warning('enter email');\n    } else if (!this.password) {\n      this.toastr.warning('enter password');\n    } else {\n\n      const data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobile: this.mobile,\n        email: this.email,\n        password: this.password\n      };\n\n      console.log(data);\n\n      this.appService.signupFunction(data)\n        .subscribe((apiResponse) => {\n\n          console.log(apiResponse);\n\n          if (apiResponse.status === 200) {\n\n            this.toastr.success('Signup successful');\n\n            setTimeout(() => {\n\n              this.goToSignIn();\n              this.toastr.success('Please confirm your email before login.');\n\n            }, 2000);\n\n          } else {\n\n            this.toastr.error(apiResponse.message);\n\n          }\n\n        }, (err) => {\n\n          this.toastr.error('some error occured');\n\n        });\n\n    } // end condition\n\n  } // end signupFunction\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { VerifyComponent } from './verify/verify.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n// Import ParticlesModule\nimport { ParticlesModule } from 'angular-particle';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ParticlesModule,\n    RouterModule.forChild([\n      { path: 'sign-up', component: SignupComponent },\n      { path: 'verify/:hash' , component: VerifyComponent},\n      {path: 'reset/:id', component: ResetPasswordComponent},\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent, VerifyComponent, ResetPasswordComponent]\n})\nexport class UserModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"success==1\\\">\\n    <div class=\\\"row mt-4\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <h2 class=\\\"text-success\\\">Email Verified!</h2>\\n        <h5 class=\\\"text-danger\\\">Thanks for signing up .Please\\n          <a [routerLink]=\\\"['/login']\\\">Login</a>\\n        </h5>\\n      </div>\\n    </div>\\n  </div> <!--success end-->\\n  <!---failure start-->\\n  <div *ngIf=\\\"failure==1\\\">\\n        <div class=\\\"row mt-4\\\">\\n          <div class=\\\"col-12 text-center\\\">\\n            <h2 class=\\\"text-success\\\">Email Not Verified!</h2>\\n            <h5 class=\\\"text-danger\\\">Oops!Some Error Occured!.Please again\\n              <a [routerLink]=\\\"['/sign-up']\\\">SignUp</a>\\n            </h5>\\n          </div>\\n        </div>\\n  </div><!-- failure end -->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppService } from './../../app.service';\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.css']\n})\nexport class VerifyComponent implements OnInit {\n  public hash: any;\n  public success = 0;\n  public failure = 0;\n  constructor(private _route: ActivatedRoute,\n    private router: Router,\n    public appservice: AppService) { }\n\n  ngOnInit() {\n    this.hash = this._route.snapshot.paramMap.get('hash');\n    this.appservice.verifyEmail(this.hash).subscribe(\n\n      Response => {\n        if (Response.status === 200) {\n          this.success = 1;\n        } else {\n          this.failure = 1;\n        }\n        },\n      error => {\n      });\n\n  } // end ngonit\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}